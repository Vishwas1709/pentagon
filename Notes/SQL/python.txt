171. WAQTD THE DETAILS OF EMP WHO ARE WORKING IN IT DEPT.

SELECT * FROM EMP WHERE DNO IN
(SELECT DNO FROM DEPT WHERE DNAME='IT');

172. WAQTD THE EMP DETAILS WHO ARE REPORTING TO SIDDARTH.

SELECT * FROM EMP WHERE MGR IN
(SELECT EID FROM EMP WHERE FNAME='SIDDARTH');

173. WAQTD THE DETAILS OF EMP WHO ARE REPORTING TO SAMEER.

SELECT * FROM EMP WHERE MGR IN
(SELECT EID FROM EMP WHERE FNAME='SAMEER');

174. WAQTD THE DEPT NAME OF EMPS WHO ARE REPORTING TO RAHUL.

SELECT DNAME FROM DEPT WHERE DNO IN
(SELECT DNO FROM EMP WHERE MGR IN
(SELECT EID FROM EMP WHERE FNAME='RAHUL'));

175. WAQTD THE DETAILS OF EMP WHO ARE REPORTING TO KIRAN'S MANAGER.

SELECT * FROM EMP WHERE MGR IN
(SELECT MGR FROM EMP WHERE FNAME='KIRAN');

176. WAQTD THE DETAILS OF EMP WHO ARE NOT THE REPORTING MANAGER.
{hint: The emp must not have any reporting to him.}

SELECT * FROM EMP WHERE EID NOT IN
(SELECT MGR FROM EMP WHERE MGR IS NOT NULL);

===============================================================
JOINS
=====
Joins are used to retrieve the data from multiple tables simultaneously.

Types of Joins
==============
1. Cartesian Join (Cross Join) [deprecated]
2. Inner Joins
3. Self Joins
4. Outer Joins
   -> LEFT Outer Joins
   -> RIGHT Outer Joins
   -> FULL Outer Joins
5. Natural Joins [deprecated]

===============================================================
Cartesian Joins or Cross Joins
==============================
In case of cross joins, the records of table 1 will be merged with the records of table 2.

Syntax:
SELECT column-name
FROM table-name-1 CROSS JOIN table-name-2;

Whenever we come across cross join, 
> Number of rows generated : t1*t2
> Number of columns generated : t1+t2

Drawback:
--------
We get more number of invalid records when compared to valid records.

===============================================================
***INNER JOINS
==============
177. WAQTD THE EMP FNAME AND HIS DEPT NAME.

SELECT FNAME,DNAME
FROM EMP INNER JOIN DEPT
ON EMP.DNO=DEPT.DNO;

178. WAQTD THE CUSTOMER FIRST NAME AND HIS LOCATION.

SELECT FIRST_NAME,LOCATION
FROM CUSTOMER INNER JOIN LOCATION
ON CUSTOMER.LID=LOCATION.LID;

179. WAQTD THE DEPT NAME AND ITS LOCATION.

SELECT DNAME,LOCATION
FROM DEPT INNER JOIN LOCATION
ON DEPT.LID=LOCATION.LID;

180. WAQTD THE EMP FNAME, DEPT NAME, DEPT NO.

SELECT E1.FNAME,D1.DNAME,E1.DNO
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO;

181. WAQTD THE EMP FNAME, LNAME, DEPT NAME OF THE EMP IF THE EMP IS A SALESMAN.

SELECT E1.FNAME,E1.LNAME,D1.DNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO
WHERE E1.JOB='SALESMAN';

182. WAQTD THE CUSTOMER FULLNAME, LOCATION, CITY IF THE CUSTOMER IS LIVING IN CHENNAI CITY.

SELECT CONCAT(C1.FIRST_NAME,' ',C1.LAST_NAME) FULLNAME,L1.LOCATION,L1.CITY
FROM CUSTOMER C1 INNER JOIN LOCATION L1
ON C1.LID=L1.LID
WHERE L1.CITY='CHENNAI';

183. WAQTD THE EMP FULLNAME, DEPT NAME IF THE EMP IS WORKING IN IT DEPT.

SELECT CONCAT(E1.FNAME,' ',E1.LNAME) FULLNAME,D1.DNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO
WHERE D1.DNAME='IT';

184. WAQTD THE EMP FNAME WHO HAS DELIVERED THE PRODUCTS.
[Hint : If an employee has delivered any product, his EID will be available in ORDERS table]

SELECT DISTINCT E1.FNAME
FROM EMP E1 INNER JOIN ORDERS O1
ON E1.EID=O1.EID;

185. WAQTD THE CUSTOMER FNAME IF THE CUSTOMER HAS ORDERED ANY PRODUCTS SO FAR.
[Hint : If a customer has ordered any product, his CID will be available in ORDERS table]

SELECT DISTINCT C1.FIRST_NAME
FROM CUSTOMER C1 INNER JOIN ORDERS O1
ON C1.CID=O1.CID;

186. WAQTD THE PRODUCT NAME IF THE PRODUCT HAS BEEN ORDERED.
[Hint : If a product has been ordered, its PRODUCT_ID will be available in ORDERS table]

SELECT DISTINCT P1.PNAME
FROM PRODUCT P1 INNER JOIN ORDERS O1
ON P1.PRODUCT_ID=O1.PRODUCT_ID;

187. WAQTD THE EMP FNAME, LNAME, DNAME IF THE EMP IS GETTING 3RD MAXIMUM SALARY.

SELECT E1.FNAME,E1.LNAME,D1.DNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO
ORDER BY E1.SAL DESC
LIMIT 1 OFFSET 2;

188. WAQTD THE EMP FNAME, LNAME, DNAME IF THE EMP IS GETTING SALARY MORE THAN 35000 AND WORKING IN IT OR SALES DEPT.

SELECT E1.FNAME,E1.LNAME,D1.DNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO
WHERE E1.SAL>35000 AND D1.DNAME IN ('IT','SALES');

189. WAQTD THE EMP FNAME, DEPT NAME AND HIS LOCATION.

SELECT E1.FNAME, D1.DNAME,L1.LOCATION
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1
ON D1.LID=L1.LID;

OR

SELECT E1.FNAME,D1.DNAME,L1.LOCATION
FROM EMP E1 INNER JOIN DEPT D1 INNER JOIN LOCATION L1
ON E1.DNO=D1.DNO AND D1.LID=L1.LID;

190. WAQTD THE ORDER ID, CUSTOMER FNAME, PRODUCT NAME WHICH THE CUSTOMER ORDERED.

SELECT O1.ORDER_ID,C1.FIRST_NAME,P1.PNAME
FROM ORDERS O1 INNER JOIN CUSTOMER C1 
ON O1.CID=C1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID;

191. WAQTD THE CUSTOMER FNAME, PRODUCT NAME IF THE CUSTOMER HAS ORDERED HEADPHONES.

SELECT C1.FIRST_NAME,P1.PNAME
FROM CUSTOMER C1 INNER JOIN ORDERS O1
ON C1.CID=O1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
WHERE P1.PNAME='HEADPHONES';

192. WAQTD THE EMP FULLNAME, DEPT NAME AND HIS WORKING LOCATION IF THE EMP IS A SALESMAN OR MANAGER.

SELECT CONCAT(E1.FNAME,' ',E1.LNAME) FULLNAME, D1.DNAME,L1.LOCATION
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1
ON D1.LID=L1.LID
WHERE JOB IN ('SALESMAN','MANAGER');

193. WAQTD THE ORDER ID, CUSTOMER FULLNAME, PNAME, PRICE AS BILL, ORDER DATE, DELIVERY DATE IN THE BELOW FORMAT.

ORDER_ID   FULLNAME   BILL    ORDER_DATE   DELIVERY_DATE
---------------------------------------------------------
1111       Aman Raj   1000.0  Aug 18,2025   Aug 19,2025

SELECT O1.ORDER_ID,
CONCAT(C1.FIRST_NAME,' ',C1.LAST_NAME) FULLNAME,
P1.PNAME, P1.PRICE BILL, 
DATE_FORMAT(O1.ORDER_DATE,'%b %d,%Y')ORDER_DATE,
DATE_FORMAT(O1.DELIVERY_DATE,'%b %d, %Y') DELIVERY_DATE
FROM ORDERS O1 INNER JOIN CUSTOMER C1
ON O1.CID=C1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID;

194. WAQTD THE EMP FNAME, DEPT NAME, LOCATION IF THE EMP IS WORKING IN KORAMANGALA.

SELECT E1.FNAME,D1.DNAME,L1.LOCATION
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1
ON D1.LID=L1.LID
WHERE L1.LOCATION='KORAMANGALA';

195. WAQTD THE CUSTOMER FIRST NAME, PRODUCT NAME, CUSTOMER LOCATION/DELIVERED LOCATION.

SELECT C1.FIRST_NAME,P1.PNAME,L1.LOCATION
FROM CUSTOMER C1 INNER JOIN ORDERS O1 
ON C1.CID=O1.CID INNER JOIN PRODUCT P1 
ON O1.PRODUCT_ID=P1.PRODUCT_ID INNER JOIN LOCATION L1
ON C1.LID=L1.LID;

196. WAQTD THE CUSTOMER FULLNAME, ORDER ID, PNAME, LOCATION, CITY IF THE CUSTOMER HAS ORDERED LAPTOP OR SMARTPHONE.

SELECT CONCAT(C1.FIRST_NAME,' ',C1.LAST_NAME) FULLNAME,
O1.ORDER_ID,P1.PNAME,L1.LOCATION,L1.CITY 
FROM CUSTOMER C1 INNER JOIN ORDERS O1 
ON C1.CID=O1.CID INNER JOIN PRODUCT P1
ON P1.PRODUCT_ID=O1.PRODUCT_ID INNER JOIN LOCATION L1
ON C1.LID=L1.LID
WHERE P1.PNAME IN ('LAPTOP','SMARTPHONE');

197. WAQTD THE EMP FNAME, LAST NAME, DEPT NAME IF THE EMP IS ALSO THE CUSTOMER OF THE SAME COMPANY.

SELECT E1.FNAME,E1.LNAME,D1.DNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN CUSTOMER C1
ON E1.CID=C1.CID;

198. WAQTD THE CUSTOMER FNAME, LOCATION, PRODUCT IF THE CUSTOMER HAS ORDERED HEADPHONES.

SELECT C1.FIRST_NAME,L1.LOCATION,P1.PNAME
FROM CUSTOMER C1 INNER JOIN LOCATION L1
ON C1.LID=L1.LID INNER JOIN ORDERS O1
ON C1.CID=O1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
WHERE P1.PNAME='HEADPHONES';

==========================================================
SELF JOINS
==========
> Self join is used to obtain the matched records from two same tables.
> Self Join works same as Inner Join.
> In case of Self Join, table level aliasing is mandatory.

Syntax:
SELECT column-name
FROM table T1 JOIN table T2
ON T1.col-name=T2.col-name;

==========================================================
199. WAQTD THE EMP FNAME AND HIS MANAGER FNAME.

SELECT E1.FNAME emp_name,E2.FNAME manager_name
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID;

200. WAQTD THE EMP FNAME, EMP SAL, MANAGER FNAME, MANAGER SAL.

SELECT E1.FNAME emp_name,E1.SAL emp_sal,
E2.FNAME manager_name, E2.SAL manager_sal
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID;

201. WAQTD THE EMP FNAME, GENDER, MANAGER FNAME, GENDER IF THE EMP AND MANAGER GENDER MATCHES.

SELECT E1.FNAME,E1.GENDER,E2.FNAME,E2.GENDER
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID
WHERE E1.GENDER=E2.GENDER;

202. WAQTD THE EMP FNAME, DOB, MANAGER FNAME, HIS DOB IF THE EMP IS ELDER THAN HIS MANAGER.

SELECT E1.FNAME,E1.DOB,E2.FNAME,E2.DOB
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID
WHERE E1.DOB<E2.DOB;

203. WAQTD THE EMP FNAME, HIS DEPT NAME AND HIS MANAGER FNAME.

SELECT E1.FNAME,D1.DNAME,E2.FNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO JOIN EMP E2
ON E1.MGR=E2.EID;

204. WAQTD THE EMP FNAME, LNAME, MANAGER FNAME, LNAME IF THE EMP FNAME AND MANAGER FNAME STARTS WITH SAME LETTER.

SELECT E1.FNAME,E1.LNAME,E2.FNAME,E2.LNAME
FROM EMP E1 JOIN EMP E2
ON E1.MGR=E2.EID
WHERE SUBSTR(E1.FNAME,1,1)=SUBSTR(E2.FNAME,1,1);

205. WAQTD THE EMP FNAME, DEPT NAME, LOCATION, HIS MANAGER FNAME.

SELECT E1.FNAME,D1.DNAME,L1.LOCATION,E2.FNAME
FROM EMP E1 INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1
ON D1.LID=L1.LID JOIN EMP E2
ON E1.MGR=E2.EID;

206. WAQTD THE CUSTOMER FIRST NAME, CUSTOMER LAST NAME IF TWO CUSTOMERS HAVE SAME LAST NAMES.

SELECT C1.FIRST_NAME,C1.LAST_NAME
FROM CUSTOMER C1 JOIN CUSTOMER C2
ON C1.LAST_NAME=C2.LAST_NAME
WHERE C1.CID!=C2.CID
ORDER BY C1.LAST_NAME;


207. WAQTD THE EMP FNAME, DEPT NAME, HIS MANAGER NAME AND MANAGER'S DEPT NAME.
SELECT E1.FNAME, D1.DNAME, E2.FNAME, D2.DNAME
FROM EMP E1 INNER JOIN DEPT D1 ON E1.DNO=D1.DNO JOIN EMP E2 ON E1.MGR=E2.EID INNER JOIN DEPT D2 ON E2.DNO=D2.DNO;

208)WAQTD THE EMP FNAME, HIS MGR NAME AND MGR'S MGR NAME:
SELECT E1.FNAME EMP_NAME,E2.FNAME MGR_NAME,E3.FNAME BOSS_NAME
FROM EMP E1 JOIN EMP E2 JOIN EMP E3 ON E1.MGR=E2.EID
AND E2.MGR=E3.EID;

209)WAQTD THE CUSTOMER'S FIRST NAME WHO HAS NOT ORDERED ANY PRODUCT:
SELECT C1.FIRST_NAME 
FROM CUSTOMER C1 LEFT OUTER JOIN ORDERS O1 
ON C1.CID=O1.CID 
WHERE O1.CID IS NULL;

210)WAQTD THE PRODUCT NAMES WHICH REMAIN UNSOLD SO FAR:
SELECT PNAME FROM 
PRODUCT P1 LEFT OUTER JOIN ORDERS O1 
ON P1.PRODUCT_ID=O1.PRODUCT_ID 
WHERE O1.PRODUCT_ID IS NULL;

211)WAQTD LOCATION WHERE NO DEPTS ARE LOCATED

SELECT L1.LOCATION
FROM LOCATION L1 LEFT OUTER JOIN DEPT D1
ON L1.LID=D1.LID
WHERE D1.LID IS NULL;

212)WAQTD LOCATION WHERE NO CUSOTMER ARE LIVING:

SELECT L1.LOCATION
FROM LOCATION L1 LEFT OUTER JOIN CUSTOMER C1
ON L1.LID=C1.LID
WHERE C1.LID IS NULL;

213) WAQTD THE customer fname, TOTAL AMOUNT SPENT BY EACH CUSTOMER OVERALL.

(explaination: One customer can order multiple product. For the first, second, third orders what is the total investment he has done.)

SELECT C1.FIRST_NAME,SUM(P1.PRICE) TOTAL
FROM CUSTOMER C1 INNER JOIN ORDERS O1
ON C1.CID=O1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY C1.CID,C1.FIRST_NAME;

214. WAQTD THE NUMBER OF ORDERS DELIVERED BY EVERY EMPLOYEE.

SELECT E1.FNAME,COUNT(*)
FROM EMP E1 INNER JOIN ORDERS O1
ON E1.EID=O1.EID
GROUP BY E1.EID,E1.FNAME;

215. WAQTD THE DEPT NAME,NUMBER OF EMPS PRESENT IN EVERY DEPT.

SELECT D1.DNAME,COUNT(*)
FROM DEPT D1 INNER JOIN EMP E1
ON D1.DNO=E1.DNO
GROUP BY D1.DNO,D1.DNAME;

216. WAQTD THE TOP 3 CUSTOMERS WITH THE TOTAL PRICE WHO HAVE SPENT THE MOST.

SELECT C1.FIRST_NAME,SUM(P1.PRICE) TOTAL
FROM CUSTOMER C1 INNER JOIN ORDERS O1
ON C1.CID=O1.CID INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY C1.CID,C1.FIRST_NAME
ORDER BY TOTAL DESC
LIMIT 3;
 
217. WAQTD THE MOST SOLD PRODUCT BASED ON QUANTITY.

SELECT P1.PNAME,COUNT(*) QUANTITY
FROM PRODUCT P1 INNER JOIN ORDERS O1
ON P1.PRODUCT_ID=O1.PRODUCT_ID
GROUP BY P1.PNAME
ORDER BY QUANTITY DESC
LIMIT 1;

218. WAQTD THE TOP 3 REVENUE GENERATED PRODUCT BASED ON PRICE.

SELECT P1.PNAME,SUM(P1.PRICE) TOTAL
FROM PRODUCT P1 INNER JOIN ORDERS O1
ON P1.PRODUCT_ID=O1.PRODUCT_ID
GROUP BY P1.PNAME
ORDER BY TOTAL DESC
LIMIT 3;

219. WAQTD THE TOP 3 MONTHS WHICH HAS GENERATED MOST REVENUE.

SELECT DATE_FORMAT(O1.ORDER_DATE,'%M') MONTH,SUM(P1.PRICE) REVENUE
FROM ORDERS O1 INNER JOIN PRODUCT P1
ON O1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY MONTH
ORDER BY REVENUE DESC
LIMIT 3;

220. WAQTD THE TOP 3 LEAST SELLING PRODUCT. IF THERE ARE MORE UNSOLD PRODUCT.

SELECT P1.PNAME,COUNT(O1.PRODUCT_ID) QUANTITY
FROM PRODUCT P1 LEFT OUTER JOIN ORDERS O1
ON P1.PRODUCT_ID=O1.PRODUCT_ID
GROUP BY P1.PNAME
ORDER BY QUANTITY ASC
LIMIT 3;

221. WAQTD THE CUSTOMER NAMES WHO HAS NOT ORDERS ANY PRODUCT SO FAR.

SELECT C1.FIRST_NAME
FROM CUSTOMER C1 LEFT OUTER JOIN ORDERS O1
ON C1.CID=O1.CID
WHERE O1.CID IS NULL;

222. WAQTD THE CUSTOMER NAME AND LOCATION IF THE CUSTOMER HAS NOT ORDERED ANY PRODUCT SO FAR.

SELECT C1.FIRST_NAME,L1.LOCATION
FROM CUSTOMER C1 LEFT OUTER JOIN ORDERS O1
ON C1.CID=O1.CID INNER JOIN LOCATION L1
ON C1.LID=L1.LID
WHERE O1.CID IS NULL;

223. WAQTD THE CUSTOMER NAME, PRODUCT NAME, LOCATION IF THE CUSTOMER HAS PURCHASED HEADPHONES BUT THE CUSTOMER DOESNOT BELONG TO TAMIL NADU.

SELECT C1.FIRST_NAME,P1.PNAME,L1.LOCATION
FROM CUSTOMER C1 INNER JOIN ORDERS O1
ON C1.CID=O1.CID INNER JOIN PRODUCT P1
ON P1.PRODUCT_ID=O1.PRODUCT_ID INNER JOIN LOCATION L1
ON C1.LID=L1.LID
WHERE P1.PNAME='HEADPHONES' AND L1.STATE!='TAMIL NADU';

224. WAQTD THE LOCATIONS, CUSTOMERS WHERE DEPTS ARE LOCATED BUT NO CUSTOMERS MUST BE LIVING IN THAT LOCATION.

SELECT L1.LOCATION,C1.FIRST_NAME
FROM LOCATION L1 INNER JOIN CUSTOMER C1
ON L1.LID=C1.LID LEFT OUTER JOIN DEPT D1
ON L1.LID=D1.LID
WHERE D1.LID IS NULL;

225. WAQTD THE PRODUCTS WHICH HAS BEEN DELIVERED TO CHENNAI.

SELECT P1.PNAME
FROM PRODUCT P1 INNER JOIN ORDERS O1
ON P1.PRODUCT_ID=O1.PRODUCT_ID INNER JOIN CUSTOMER C1
ON C1.CID=O1.CID INNER JOIN LOCATION L1
ON C1.LID=L1.LID
WHERE L1.CITY='CHENNAI';

===============================================================
NATURAL JOINS [deprecated]
=============
> Natural Joins are used to obtain the matched records from both the table by using the same column name.
> Incase of Natural Join, the column names in bothe the tables must be same.
> The common column will not be displayed multiple times.
> The common column will be displayed first.

Syntax:
SELECT column-name
FROM table-name-1 NATURAL JOIN table-name-2; 

================================================================


